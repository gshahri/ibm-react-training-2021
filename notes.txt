React.js & Redux

Your Name
Primary Skillset
Rank yourself in JavaScript (1-10)
Exposure to any JavaScript frameworks (Backbone, Angular, Vue.js)
Exposure to React

Mainframe(1, 1, 1, 1)
Business Analyst(1)
DBA(1)
Core Java (1, 1, 1, 1, 1, 1, 1, 1, 1)
C# (1)
Angular (1, 1, 1)
React(1)
React Native(1)
Node(1, 1, 1, 1)
Ember(1)
J2EE(1, 1)
Test Automation(1, 1, 1)


React.js
    Rich Internet Applications

0:00 - 7:30PM
1:30 - 9:00PM Tea
3:00 - 10:30PM Lunch
4:00 - 11:30PM After Lunch
6:00 - 1:30AM Tea
8:00 - 3:30AM Wind up

VS Code extensions
=====================
Auto Rename Tag
Bracket Pair Colorizer
Clang-Format
Lorem ipsum
Material Icon Theme
Prettier - Code formatter
Tabnine Autocomplete AI


ES6 (ECMAScript 6 / ESNext / ES2015)
1. let
2. const
3. Array destructuring
        var nos = [3,1,5,2,4]
        var [x, y] = nos
        [x,y] = [y,x]

4. Rest operator (Array)
        var [x, y, ...z] = nos;
        function add(...nos){
            let result = 0;
            for(let i = 0, count = nos.length; i < count; i++)
                result += nos[i]
            return result;
        }

5. Spread operator (Array)
        var newNos = [ ...nos, 10,20,30]

6. Object destructuring
        var emp = { id : 100, name : 'Magesh', salary : 10000 }
        //var { id, salary } = emp
        var { salary, id } = emp
        var { id : x, salary : y } = emp

        var emps = [
            { id : 100, name : 'Magesh', salary : 10000 },
            { id : 101, name : 'Philip', salary : 20000 }
        ]
        //combining object and array destructuring
        var [ { id : x1, salary : y1 }, { id : x2, salary : y2 } ] = emps

7. Rest operator (Object)
        var emp = { id : 100, name : 'Magesh', salary : 10000 }
        var { id : x, ...z } = emp

8. Spread operator (Object)
        var emp = { id : 100, name : 'Magesh', salary : 10000 }
        var newEmp = { ...emp, city : 'Bangalore' }

9. Object constructor enhancements
        var id = 100, name = 'Magesh', salary = 10000
        var emp = {id, name, salary}

10. default arguments
        function add(x = 10,y = 20){
            return x + y;
        }
        add()
        30
        add(100)
        120
        add(undefined, 200)
        210
        add(100,200)
        300

11. Arrow functions
        /*
        //function statement
        function add(x,y){
        return x + y;
        }

        //function expression
        var add = function(x,y){
        return x + y;
        }

        var add = (x,y) => {
        return x + y;
        }
        */
        var add = (x,y) => x + y;

        var nos = [3,1,5,2,4]
        
        var evenNos = nos.filter(function(no){
            return no % 2 === 0;
        })
        nos.filter(no => no % 2 === 0)

12. Class

    class Employee{
        id = 0;
        name = '';
        salary = 0;
        
        constructor(id, name, salary){
            this.id = id;
            this.name = name;
            this.salary = salary;
        }

        display(){
            console.log(this.id, this.name, this.salary);
        }
    }

    //Class Inheritance
    class FulltimeEmployee extends Employee{
        benefits = '';
        constructor(id, name, salary, benefits){
            super(id, name, salary);
            this.benefits= benefits;
        }
    }

13. template strings
    var x = 10, y = 20
    var s1 = 'Sum of ' + x + ' and ' + y + ' is ' + (x + y)

    var s2 = `Sum of ${x} and ${y} is ${x+y}`
    
    var s2 = `Sum of ${x} 
    and ${y} is ${x+y}`

14. iterators
    var nos = [3,1,5,2,4]
    
    for(let no of nos)
        console.log(no)


15. generators
16. promises
17. async await

For More -> http://es6-features.org

Assignment (Day-2)
    Array methods : filter, forEach, map, reduce


Create React Application
    using create-react-app (node cli)

React Component = encapsulatation of Presentation + UI Behavior + State
    Presentation = HTML
    UI Behavior = handling user actions
    State = data

HTML
open tags are allowed
'for' attribute is allowed
'class' attribute is allowed

JSX
all tags must have corresponding close tags
use 'htmlFor' instead (of 'for')
use 'className' instead (of 'class')


To create a react application
    From the folder where we want to the app
        npx create-react-app <app-name>
            OR
        npm install create-react-app  -g
        create-react-app <app-name>

To install yarn
    npm install yarn  -g


ES6 Modules
    - Everything defined in a JS file is considered private
    - Public entities have to be EXPLICITLY EXPORTED
    - public entities from other JS files have to be EXPLICITLY IMPORTED to use.

Before React 16
    Functional components CANNOT manage state
    Functional components CANNOT have life cycle events
        componentWillmount
        componentDidMount
        componentShouldUpdate
        render
        componentWillUnmount

    In React 16, the above can be achieved using 'React Hooks'
    React Hooks
        - are functions
        - function name must start with 'use'
        - Builtin Hooks
            - useState
                manage state in functional components
            - useEffects
                manage lifecycle events in functional components
            - useReducer
            - useMemo
            - useCallback
            - useRef

    State
        Application State
            Data that is used in the core application logic
            It is highly likely that this data is needed through out the application
            SHOULD NOT be maintained in the component state

        UI State
            Data that represents the UI logic (presentation) of the application
            It is highly likely that this data is needed ONLY in the component
            CAN be maintained in the component state

Flux
    Architectural guideline by Facebook for managing the application state and manipulating them



Redux
    Library - https://unpkg.com/redux@4.0.5/dist/redux.js

To install redux
    npm install redux
    yarn add redux

json-server (https://www.npmjs.com/package/json-server)
    serves the data from a json file as restful endpoints
    to run the json-server, from the foler that has the data file
        npx json-server db.json -p 3030

For server communication use axios (https://www.npmjs.com/package/axios)
    to install, run the command in the application folder
        yarn add axios
            (OR)
        npm install axios

react-redux
    adapters between the react & redux
        connect
        Provider

Assignment
    1. Associate the projectId (from the dropdown ) with each project
        
    2. Display the bugs beloging to the selecte project (in the projects component)
        select & unselect the project by clicking the project name (in the projects component)
        if no project is selected in the projects component, display all the bugs