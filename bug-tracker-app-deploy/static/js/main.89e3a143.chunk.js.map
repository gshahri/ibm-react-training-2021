{"version":3,"sources":["reducers/bugsReducer.js","reducers/projectsReducer.js","store/index.js","reducers/index.js","store/middlewares/promiseMiddleware.js","store/middlewares/index.js","reportWebVitals.js","utils/useQuery.js","bug-tracker/services/bugApi.js","bug-tracker/actions/remove.js","bug-tracker/actions/load.js","bug-tracker/actions/index.js","bug-tracker/actions/addNew.js","bug-tracker/actions/toggle.js","bug-tracker/actions/removeClosed.js","bug-tracker/components/bugStats.js","bug-tracker/components/bugSort.js","bug-tracker/components/bugEdit.js","bug-tracker/components/bugItem.js","bug-tracker/components/bugList.js","bug-tracker/index.js","projects/actions/index.js","projects/index.js","home.js","index.js"],"names":["bugsReducer","currentState","action","type","newState","payload","filter","bug","id","map","initialState","list","selected","projectsReducer","preloadedState","rootReducer","combineReducers","bugs","projects","promiseMiddleware","store","next","Promise","then","actionObj","dispatch","appMiddlewares","applyMiddleware","logger","thunk","rawState","window","localStorage","getItem","JSON","parse","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","useQuery","URLSearchParams","useLocation","search","serviceEndPoint","a","axios","response","data","bugData","bugApi","getAll","get","save","remove","bugToRemove","load","bugActionCreators","addNew","newBugName","selectedProject","newBugData","name","isClosed","createdAt","Date","projectId","newBug","toggle","bugToToggle","toggledBugData","toggledBug","removeClosed","getState","forEach","BugStats","closedCount","reduce","result","className","length","BugSort","htmlFor","value","BugEdit","useState","setNewBugName","setSelectedProject","onChange","evt","target","project","onClick","BugItem","toString","BugList","bugItems","connect","parseInt","bindActionCreators","query","console","log","useEffect","projectsData","projectActionCreators","Home","ReactDOM","render","setItem","stringify","to","path","document","getElementById"],"mappings":"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","file":"static/js/main.89e3a143.chunk.js","sourcesContent":["function bugsReducer(currentState = [], action){\n    if (action.type === 'BUGS_ADD_NEW'){\n        const newState = [...currentState, action.payload];\n        return newState;\n    }\n    if (action.type === 'BUGS_REMOVE'){\n        return currentState.filter(bug => bug.id !== action.payload.id);\n    }\n    if (action.type === 'BUGS_UPDATE'){\n        return currentState.map(bug => bug.id === action.payload.id ? action.payload : bug);\n    }\n    if (action.type === 'BUGS_INIT'){\n        return action.payload;\n    }\n    return currentState;\n}\nexport default bugsReducer;","const initialState = {\n    list : [],\n    selected : ''\n};\n\nfunction projectsReducer(currentState = initialState, action){\n    if (action.type === 'PROJECTS_INIT')\n        return { ...currentState, list : action.payload };\n    if (action.type === 'PROJECTS_SET_SELECTED'){\n        return { ...currentState, selected : action.payload };\n    }\n    return currentState;\n}\n\nexport default projectsReducer;","import { createStore } from 'redux';\nimport rootReducer from '../reducers'\nimport appMiddlewares from './middlewares';\n\nlet preloadedState;\nconst rawState = window.localStorage.getItem('bug-tracker-state');\nif (rawState){\n    preloadedState = JSON.parse(rawState)\n}\nconst store = createStore(rootReducer, preloadedState, appMiddlewares);\nexport default store;\n","import { combineReducers } from 'redux';\n\nimport bugsReducer from './bugsReducer';\nimport projectsReducer from './projectsReducer';\n\nconst rootReducer = combineReducers({\n    bugs : bugsReducer,\n    projects : projectsReducer\n})\n\nexport default rootReducer;","const promiseMiddleware = store => next => action => {\n    if (action instanceof Promise){\n        action.then(actionObj => store.dispatch(actionObj));\n        return;\n    }\n    return next(action);\n}\n\nexport default promiseMiddleware;","import logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport promiseMiddleware from './promiseMiddleware';\nimport { applyMiddleware } from 'redux';\n\nconst appMiddlewares = applyMiddleware(logger, thunk, promiseMiddleware );\nexport default appMiddlewares;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {useLocation} from 'react-router-dom';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\nexport default useQuery;","import * as axios from 'axios';\n\nconst serviceEndPoint = 'http://localhost:3030/bugs'\n\nasync function getAll(){\n    const response = await axios.get(serviceEndPoint);\n    return response.data;\n}\n\nasync function get(id){\n    const response = await axios.get(`${serviceEndPoint}/${id}`);\n    return response.data;\n}\n\nasync function save(bugData){\n    if (bugData.id === 0){\n        const response = await axios.post(serviceEndPoint, bugData);\n        return response.data\n    } else {\n        const response = await axios.put(`${serviceEndPoint}/${bugData.id}`, bugData);\n        return response.data;\n    }\n}\n\nasync function remove(bugData){\n    const response = await axios.delete(`${serviceEndPoint}/${bugData.id}`);\n    return response.data;\n}\n\nconst bugApi = { getAll, get, save, remove };\n\nexport default bugApi;","/* export default function remove(bugToRemove){\n    const action = { type : 'BUGS_REMOVE', payload : bugToRemove };\n    return action;\n} */\n\nimport bugApi from '../services/bugApi';\n\n//using the thunk/async middleware\n/* \nexport default function remove(bugToRemove){\n    return async function(dispatch){\n        await bugApi.remove(bugToRemove)\n        const action = { type : 'BUGS_REMOVE', payload : bugToRemove };\n        dispatch(action);\n    }\n} \n*/\n\nexport default async function remove(bugToRemove){\n    await bugApi.remove(bugToRemove)\n    const action = { type : 'BUGS_REMOVE', payload : bugToRemove };\n    return action;\n}","import * as axios from 'axios';\nimport bugApi from '../services/bugApi';\n\nfunction getLocalBugs(){\n    const bugs = [\n        {\n        \"id\": 1,\n        \"name\": \"Local Bug - 1\",\n        \"isClosed\": true,\n        \"createdAt\": \"2020-12-08T02:08:26.035Z\"\n        },\n        {\n        \"id\": 2,\n        \"name\": \"Local Bug - 2\",\n        \"isClosed\": false,\n        \"createdAt\": \"2020-12-08T02:11:50.204Z\"\n        }\n    ];\n    return bugs;\n}\n\n/* function getRemoteBugs(){\n   return axios.get('http://localhost:3030/bugs')\n        .then(response => response.data)\n} */\n\n//the above function implementation using \"async await\"\nasync function getRemoteBugs(){\n   const response = await axios.get('http://localhost:3030/bugs');\n   return response.data;\n}\n\n//sync action\n/* \nfunction load(){\n    const bugs = getLocalBugs();\n    const action = { type : 'BUGS_INIT', payload : bugs };\n    return action;    \n} \n*/\n\n\n//async action\n/* function load(){\n    return function(dispatch){\n        axios.get('http://localhost:3030/bugs')\n            .then(response => response.data)\n            .then(bugs => {\n                const action = { type : 'BUGS_INIT', payload : bugs };\n                dispatch(action);\n            });   \n    }\n} */\n\n//using async await\n/* function load(){\n    return async function(dispatch){\n        const response = await axios.get('http://localhost:3030/bugs');\n        const bugs = response.data\n        const action = { type : 'BUGS_INIT', payload : bugs };\n        dispatch(action);\n    }\n} */\n\n//using the getRemoteBugs()\n/* \nfunction load(){\n    return async function(dispatch){\n        const bugs = await getRemoteBugs();\n        const action = { type : 'BUGS_INIT', payload : bugs };\n        dispatch(action);\n    }\n} \n*/\n\n//using the bugApi service\nfunction load(){\n    return async function(dispatch){\n        const bugs = await bugApi.getAll();\n        const action = { type : 'BUGS_INIT', payload : bugs };\n        dispatch(action);\n    }\n}\n\nexport default load;","import addNew from './addNew';\nimport toggle from './toggle';\nimport remove from './remove';\nimport removeClosed from './removeClosed';\nimport load from './load';\n\nconst bugActionCreators = { addNew, toggle, remove, removeClosed, load };\n\nexport default bugActionCreators;","/* \nlet _currentBugId = 0;\nexport default function addNew(newBugName){\n    const newBug = { \n        id : ++_currentBugId,\n        name : newBugName,\n        isClosed : false,\n        createdAt : new Date()\n    };\n    const action = { type : 'BUGS_ADD_NEW', payload : newBug };\n    return action;\n}; \n*/\n\nimport bugApi from '../services/bugApi'\n\nexport default function addNew(newBugName, selectedProject){\n    return async function(dispatch){\n        const newBugData = { \n            id : 0,\n            name : newBugName,\n            isClosed : false,\n            createdAt : new Date(),\n            projectId : selectedProject\n        };\n        const newBug = await bugApi.save(newBugData);\n        const action = { type : 'BUGS_ADD_NEW', payload : newBug };\n        dispatch(action);\n    }\n};","/* export default function toggle(bugToToggle){\n    const toggledBug = { ...bugToToggle, isClosed : !bugToToggle.isClosed };\n    const action = { type : 'BUGS_UPDATE', payload : toggledBug };\n    return action;\n} */\n\nimport bugApi from '../services/bugApi'\n\nexport default function toggle(bugToToggle){\n    return async function(dispatch){\n        const toggledBugData = { ...bugToToggle, isClosed : !bugToToggle.isClosed };\n        const toggledBug = await bugApi.save(toggledBugData);\n        const action = { type : 'BUGS_UPDATE', payload : toggledBug };\n        dispatch(action);\n    }\n}","/* export default function removeClosed(bugs){\n    const bugsToRetain = bugs.filter(bug => !bug.isClosed);\n    const action = { type : 'BUGS_INIT', payload : bugsToRetain};\n    return action;\n} */\n\nimport bugApi from '../services/bugApi';\n\nexport default function removeClosed(){\n    return function(dispatch, getState){\n        const { bugs } = getState();\n        const bugsToRemove = bugs.filter(bug => bug.isClosed);\n        bugsToRemove\n            .forEach(async bugToRemove => {\n                await bugApi.remove(bugToRemove);\n                const action = { type : 'BUGS_REMOVE', payload : bugToRemove };\n                dispatch(action);\n            });\n    }\n}","const BugStats = ({bugs}) => {\n    const closedCount = bugs.reduce((result, bug) => bug.isClosed ? result + 1 : result, 0);\n    return(\n        <section className=\"stats\">\n            <span className=\"closed\">{closedCount}</span>\n            <span> / </span>\n            <span>{bugs.length}</span>\n        </section>\n    )\n}\n\nexport default BugStats;","const BugSort = () => (\n    <section className=\"sort\">\n        <label htmlFor=\"\">Order By :</label>\n        <select name=\"\" id=\"\">\n            <option value=\"\"></option>\n            <option value=\"\"></option>\n        </select>\n        <label htmlFor=\"\">Descending ?:</label>\n        <input type=\"checkbox\" name=\"\" id=\"\" />\n    </section>\n);\n\nexport default BugSort;","import { useState } from 'react';\n\nconst BugEdit = ({addNew, projects}) => {\n    const [newBugName, setNewBugName] = useState('');\n    const [selectedProject, setSelectedProject] = useState('');\n    return (\n        <section className=\"edit\">\n            <label htmlFor=\"\">Bug Name :</label>\n            <input type=\"text\" onChange={ evt => setNewBugName(evt.target.value)} />\n            <label> Project : </label>\n            <select onChange={evt => setSelectedProject(evt.target.value)}>\n                <option value=\"\">---Select---</option>\n                {\n                    projects.map(project => (\n                        <option \n                            value={project.id} \n                            key={project.id}\n                        >\n                            {project.name}\n                        </option>\n                    ))\n                }\n            </select>\n            <input type=\"button\" value=\"Add New\" onClick={ () => addNew(newBugName, selectedProject)} />\n        </section>\n    )\n}\n\nexport default BugEdit;","const BugItem = ({bug, toggle, remove}) => {\n    return (\n        <li>\n            <span \n                onClick={() => toggle(bug)}\n                className={ \"bugname\" + (bug.isClosed ? ' closed' : '') }\n            >\n                {bug.name}\n            </span>\n            <div>Project : {bug.projectId}</div>\n            <div className=\"datetime\">[ {bug.createdAt.toString()} ]</div>\n            <input type=\"button\" value=\"Remove\" onClick={ () => remove(bug)} />\n        </li>\n    )\n}\n\nexport default BugItem;","import BugItem from './bugItem';\nconst BugList = ({bugs, removeClosed, toggle, remove }) => {\n    const bugItems = bugs.map(bug => (\n        <BugItem key={bug.id} {...{bug, remove, toggle}} />\n    ))\n    return (\n        <section className=\"list\">\n            <ol>\n                {bugItems}\n            </ol>\n            <input type=\"button\" value=\"Remove Closed\" onClick={removeClosed} />\n        </section>\n    )\n}\n\nexport default BugList;","import React, { Fragment, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport useQuery from '../utils/useQuery';\n\nimport './index.css';\nimport bugActionCreators from './actions';\n\n//presentation (OR) dumb component\nimport BugStats from './components/bugStats';\nimport BugSort from './components/bugSort';\nimport BugEdit from './components/bugEdit';\nimport BugList from './components/bugList';\n\n//container (OR) smart component\nconst BugTracker = ({bugs, projects, addNew, remove, toggle, removeClosed, load }) => {\n    \n    const query = useQuery();\n    console.log('xyz -> ', query.get('xyz') );\n    useEffect(() => {\n        load();\n    }, [load]);\n    \n    return(\n        <Fragment>\n            <section>\n                <h3>Bugs</h3>\n            </section>\n            <BugStats bugs={bugs} />\n            <BugSort/>\n            {/* <BugEdit addNew={addNew} projects={projects} /> */}\n            <BugEdit {...{addNew, projects}} />\n            <BugList {...{bugs, remove, toggle, removeClosed}} />\n        </Fragment>\n    )\n}\n\n/* function mapStateToProps(storeState){\n    const { bugs, projects } = storeState;\n    return { bugs : bugs, projects : projects };\n} */\n\n/* function mapStateToProps({ bugs, projects }){\n    return { bugs, projects };\n} */\n\n//const mapStateToProps = ({bugs, projects}) => ({ bugs, projects});\n\n/* function mapDispatchToProps(dispatch){\n    const bugActionDispatchers = bindActionCreators(bugActionCreators, dispatch);\n    return bugActionDispatchers;\n} */\n\n//const mapDispatchToProps = (dispatch) => bindActionCreators(bugActionCreators, dispatch);\n\n//export default connect(mapStateToProps, mapDispatchToProps)(BugTracker);\n\nexport default connect(\n    ({bugs, projects}) => {\n        if (!projects.selected){\n            return ({bugs, projects : projects.list})\n        }\n        return ({\n            bugs : bugs.filter(bug => parseInt(bug.projectId) === parseInt(projects.selected.id)), \n            projects : projects.list\n        });\n    },\n    dispatch => bindActionCreators(bugActionCreators, dispatch)\n)(BugTracker);","const projectsData = [\n    { id : 1, name : 'Payroll Master'},\n    { id : 2, name : 'Bug Tracker'},\n    { id : 3, name : 'Task Manager'}\n];\n\nconst projectActionCreators = { \n    load(){\n        const action = { type : 'PROJECTS_INIT', payload  : projectsData };\n        return action;\n    },\n    setSelectedProject(project){\n        const action = { type : 'PROJECTS_SET_SELECTED', payload : project };\n        return action;\n    }\n}\n\nexport default projectActionCreators;","import { Fragment, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport './index.css';\nimport projectActionCreators from './actions';\n\nconst Projects = ({list, load, selected, setSelectedProject}) => {\n    useEffect(() =>{\n        load();\n    }, [load]);\n    console.log(selected);\n    return(\n        <Fragment>\n            <h3>Projects</h3>\n            <ol>\n                {list.map(project =>(\n                    <li \n                        key={project.id} \n                        className={project.id === selected.id ? 'selected' : ''}\n                        onClick={ () => setSelectedProject(project === selected ? '' : project)}\n                    >{project.name}</li>\n                ))}\n            </ol>\n        </Fragment>\n\n    )\n}\n\nfunction mapStateToProps({projects}){\n    const { list, selected } = projects;\n    return ({list, selected});\n}\n\nfunction mapDispatchToProps(dispatch){\n    const projectActionDispatchers = bindActionCreators(projectActionCreators, dispatch);\n    return projectActionDispatchers;\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);","const Home = () => (\n    <div>\n        <p>Dolor occaecat nulla sint laborum. Et tempor duis nostrud elit elit ut irure ut. Commodo minim sit ea non minim ea et tempor sunt culpa. Duis ad nulla ullamco exercitation magna ullamco est nisi id ipsum laborum.Fugiat laboris velit amet ad aliquip aute duis id duis ex aliqua magna. Consectetur eiusmod aliqua est incididunt magna quis qui tempor officia non pariatur voluptate. Lorem consectetur aliqua eiusmod ea velit sit cillum laborum. Ad dolor velit laboris eu duis ipsum eiusmod Lorem minim. In adipisicing Lorem incididunt ullamco mollit tempor enim Lorem exercitation ullamco. Ad minim fugiat quis exercitation. Veniam duis velit consectetur dolor.Fugiat do cupidatat non deserunt labore laboris. Duis quis ea irure cupidatat laboris cupidatat excepteur esse. Elit qui in minim irure irure. Qui Lorem esse sint aliquip et deserunt commodo irure incididunt velit aliqua consectetur elit. Sunt tempor quis exercitation laborum Lorem nisi labore eiusmod irure elit culpa voluptate anim. Sint Lorem ea laborum sunt cupidatat eiusmod est excepteur excepteur.</p>\n        <p>Lorem ea adipisicing aliquip cillum non dolor id aliqua reprehenderit sit eu. Minim eiusmod amet adipisicing enim dolore qui laboris in excepteur nostrud labore aliqua id. Cupidatat ea ipsum exercitation ut id cupidatat elit elit laboris adipisicing est id. Incididunt dolor sit Lorem commodo nisi. Commodo adipisicing Lorem eiusmod est commodo incididunt in ullamco adipisicing. Id sit nulla quis tempor commodo proident eiusmod eiusmod dolor anim aliqua aliquip ipsum.Ullamco velit nostrud occaecat velit ullamco non est non dolor duis sint nisi. Eu proident quis id amet cupidatat consequat. In consectetur sit quis sit occaecat anim pariatur ea labore.Mollit culpa dolor incididunt consequat irure nulla. Velit culpa consequat aute ad tempor ad sunt mollit cillum cillum nulla. Ipsum exercitation minim Lorem consectetur sit sint excepteur laboris.</p>\n        <p>Aliquip aliquip est qui laborum aliquip. Fugiat non sint ea eu amet fugiat consequat irure exercitation sit quis est tempor minim. Id Lorem nisi deserunt incididunt quis amet esse fugiat in aliqua.Excepteur incididunt proident consectetur labore ipsum non ex culpa dolore nisi commodo reprehenderit voluptate. Incididunt velit aute ad voluptate ad dolor fugiat tempor. Do labore adipisicing veniam veniam eiusmod eu laborum deserunt laboris nostrud dolor. Aliquip culpa Lorem voluptate non in aute Lorem laboris. Aliquip eiusmod dolor proident minim.Do adipisicing exercitation veniam quis nisi commodo officia veniam minim quis. Culpa labore sunt ex labore ad dolore in voluptate sit veniam laborum enim dolor officia. Ex id ullamco proident nostrud.</p>\n    </div>\n);\n\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\n\nimport BugTracker from './bug-tracker';\nimport Projects from './projects';\nimport Home from './home';\n\nReactDOM.render(\n    <Provider store={store}>\n        <div>\n            <input type=\"button\" value=\"Hibernate\" onClick={() => window.localStorage.setItem('bug-tracker-state', JSON.stringify(store.getState()))} />\n            <h1>Bug Tracker</h1>\n            <Router>\n                <section>\n                    <span> [ <Link to=\"/\">Home</Link> ] </span>\n                    <span> [ <Link to=\"/bugs?xyz=100\">Bugs</Link> ] </span>\n                    <span> [ <Link to=\"/projects\">Projects</Link> ] </span>\n                </section>\n                <hr/>\n                <Switch>\n                    <Route path=\"/bugs\">\n                        <BugTracker />\n                    </Route>\n                    <Route path=\"/projects\">\n                        <Projects />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    </Provider>\n, document.getElementById('root'))\n \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}